{% set title = 'Portfolio 2018 Redesign | getpatlau' %}
{% set description = 'Portfolio for Patrik Lau, UX Designer' %}
{% set page_title = 'Work' %}
{% set work_title = 'Portfolio' %}
{% extends "partials/_layout.njk" %}
{% import "partials/macros.njk" as macros %}

{% block content %}
{{ macros.header('header-bar_portfolio', page_title , navItems) }}
<div class="wrap-1-content">
  <section class="work__hero work__hero--portfolio hero-1 ">
    <div class="wrap-1 sf-1">
      <h1 class="work__title">Portfolio Redesign + Development</h1>
      <p class="work__subtitle">Learning Gulp, nunjucks, and SCSS</p>
      <img class="img-responsive" src="/images/portfolio/portfolio_hero.png" width="622" height="440" class="img-lazy" />
    </div>
  </section>
  <section class="work__content fullpage-fade-in">
    <div class="wrap-1 sf-1 work_header">
      <h2 class="vis-hide">Information</h2>
      <div class="work__info col-12">
        <span class="work__info-label">My Roles</span>
        <span class="work__info-value">Development, Research</span>
      </div>
      <div class="work__info col-4">
        <span class="work__info-label">Company</span>
        <span class="work__info-value">Myself!</span>
      </div>
      <div class="work__info col-8">
        <span class="work__info-label">Time Period</span>
        <span class="work__info-value">June-December 2018</span>
      </div>
    </div>
    <div class="wrap-1 sf-1">
      <h2>Necessary Development</h2>
      <p>In the summer of 2018 I started a slow process of updating my portfolio to use “new” technology that I’ve seen friends use at university and at work. In addition I update the visual style to my portfolio. The major new processes I wanted to learn and try to implement were templates for HTML files using <a href="https://mozilla.github.io/nunjucks/">nunjucks</a> and pre processing CSS files with <a href="https://sass-lang.com/">SCSS</a>. During my search for pre-processing tools, I also implemented an automated workflow with <a href="https://gulpjs.com/">gulp.js</a> that handles preprocessing, browser refreshing, and building packages for deployment.</p>
      <p>By the end of this redevelopment I wanted to implement:
        <ol>
          <li>New styling for my portfolio that reflects the current me.</li>
          <li>Some level of automation in my workflow.</li>
          <li>One major animation for the landing page.</li>
        </ol>
      </p>
    </div>
    <figure class="display-lg">
      <div class="work-figure-full clearfix">
        <img class="img-responsive" src="/images/portfolio/portfolio2.png" alt="twitch splash" style="max-height:36rem;"/>
        <p class="work-caption work-summary sf-1">
          New style changes, with some notes on usage.
        </p>
      </div>
    </figure>
    <figure class="display-mb">
      <div class="work-figure-full clearfix">
        <img class="img-responsive" src="/images/portfolio/portfolio2.png" alt="twitch users" style="max-height:30rem;margin-bottom:1rem;"/>
        <p class="work-caption work-summary sf-1">
          New style changes, with some notes on usage.
        </p>
      </div>
    </figure>
    <div class="wrap-1 sf-1">
      <h2>Style Changes</h2>
      <p>For style changes to the portfolio, I created a new colour scheme in addition to adding animations for emphasis. On the front page I made a seamless full page transition in a playful way, with the screen changing to the colour of where a user is going and loading the page with the same colours. Smaller animations are through with hovers and the semi sticky header bar.</p>
      <p>A specific design choice was to have consistent header text across from the landing page to work pages, at the same height and in the same font in an effort to have a recognizable visual starting point when going from one place to another.</p>
    </div>
    <figure class="display-lg">
      <div class="work-figure-full clearfix">
        <img class="img-responsive" src="/images/portfolio/portfolio4.png" alt="twitch splash" style="max-height:36rem;margin-bottom:1rem;"/>
        <p class="work-caption work-summary sf-1">
          Using gulp let me test both mobile and desktop displays at the same time with browsersync.
        </p>
      </div>
    </figure>
    <figure class="display-mb">
      <div class="work-figure-full clearfix">
        <img class="img-responsive" src="/images/portfolio/portfolio4_1.png" alt="twitch users" style="max-height:18rem;"/>
        <img class="img-responsive" src="/images/portfolio/portfolio4_2.png" alt="twitch users" style="max-height:18rem;margin-bottom:1rem;"/>
        <p class="work-caption work-summary sf-1">
          Using gulp let me test both mobile and desktop displays at the same time with browsersync.
        </p>
      </div>
    </figure>
    <div class="wrap-1 sf-1">
      <h2>Automatic workflow</h2>
      <p>I picked up gulp.js to learn better practices for web development, as well as automate my own development. I learn to separate builds from source files, to run a local webserver using copied temporary files, and make clean and minified deployment builds. Gulp allowed me to have a clean workflow with less manual steps.</p>
    </div>
    <figure class="display-lg">
      <div class="work-figure-full clearfix">
        <img class="img-responsive" src="/images/portfolio/portfolio5.png" alt="twitch splash" style="max-height:36rem;"/>
        <p class="work-caption work-summary sf-1">
          With nunjucks I can use macros similar to functions in traditional programming to inject code snippets that are customized to an extent.
        </p>
      </div>
    </figure>
    <figure class="display-mb">
      <div class="work-figure-full clearfix">
        <img class="img-responsive" src="/images/portfolio/portfolio5m.png" alt="twitch users" style="max-height:30rem;margin-bottom:1rem;"/>
        <p class="work-caption work-summary sf-1">
          With nunjucks I can use macros similar to functions in traditional programming to inject code snippets that are customized to an extent.
        </p>
      </div>
    </figure>
    <div class="wrap-1 sf-1">
      <h2>Making resuable parts</h2>
      <p>Another change I wanted to do for the new portfolio is use templates with more programmatic methods of managing my code. The solution in this case was using a templating engine alongside SCSS to supply the means to have variables and functions in HTML and CSS. </p>
      <p>Nunjucks allows for variables to be passed through templates with macros, which I could import into any template use similar to traditional functions. This solution is seen through various macros and mixins in nunjucks and SCSS respectively.</p>
    </div>
    <figure>
      <div class="work-figure-full clearfix">
        <div class="work-video_wrap" style="max-width:720px;">
          <video class="work-video" controls="controls">
            <source src="/images/portfolio/mainanimation.mp4" />
            <p><a href="/images/portfolio/mainanimation.mp4">Download this video file.</a></p>
          </video>
        </div>
        <p class="work-caption work-summary sf-1">
          Main animation walkthrough.
        </p>
      </div>
    </figure>
    <div class="wrap-1 sf-1">
      <h2>Making lightweight animations</h2>
      <p>A particular challenge of the full page transition animation was not using injected javascript DOM elements to animate as my transitions. All of the animations are visually performed using CSS3 animations and keyframes, and done with the purpose of being more compliant with older browsers. </p>
      <p>All transitional animations are triggered through javascript class additions or with on load class animations, this has the benefit of breaking only transitional animations with no javascript.</p>
      <p>A note on the way I did my circle expanding transition, the orignal method I used would break on ultra wide monitors. I retooled it to have javascript calculate a scale number that the objects need to scale to in order to get complete coverage.</p>
    </div>
    <figure>
      <div class="work-figure-full clearfix">
        <div class="background__portfolio fullpage-fade-in-out-repeating">
          <section class="work__hero work__hero--portfolio">
            <div class="wrap-1 sf-1 header-bar_content header-bar_portfolio" style="margin-bottom:4rem;">
              <a href="/" class="header-bar_logo not-active">Patrik Lau</a>
              <nav class="header-bar_nav">
                <ul class="header-bar_nav-list">
                  <li><a href="/" class="header-bar_nav-item -active  not-active">Work</a>
                  <li><a href="/" class="header-bar_nav-item  not-active">About</a>
                  </li>
                </ul>
            </div>
            <div class="wrap-1 sf-1">
              <h1 class="work__title">Demo Animation</h1>
              <p class="work__subtitle">This is on a loop!</p>
              <img class="img-responsive" src="/images/portfolio/portfolio_hero.png" class="img-lazy" style="max-height:20rem;"/>
            </div>
          </section>
        </div>
      </div>
    </figure>
    <div class="wrap-1 sf-1">
      <p>On load animations can be done with keyframes and a DOM element that sits ontop of other elements and then hides itself by changing attributes by the end of it’s keyframes.</p>
      <p>From rebuilding my portfolio I learned more about web development processes, and how to automate some of my own processes. I picked up knowledge about animations along the way, with some tricks to have less javacsript intensive animations. In remaking my portfolio I became more confident in my ability to seek out and apply knowledge as it came to me.</p>
      <p>You can see the progress on <a href="https://github.com/icyTan/portfolio2018-progress">github</a>.</p>
      <h2>What's next</h2>
      <p>From redeveloping my portfolio I noted down options I wanted to learn about and implement:
        <ol>
          <li>Self contained demo animation with more detail included</li>
          <li>More javascript involvement with animations and loading</li>
          <li>Learning to bundle my assets properly using Webpack</li>
          <li>Look at Framer/Framer.js as prototyping tool</li>
        </ol>
      </p>
    </div>
  </section>
</div>
<div class="page-cover background__portfolio cover-lift">

</div>
{{ macros.worklist(work_title , worklistItems) }}
  {% include "partials/footer.njk" %}
{% endblock %}
